name: Chocolatine_Workflow
on:
  push:
    branches-ignore:
    - "ga-ignore-*"
  pull_request:
    branches-ignore:
    - "ga-ignore-*"
env:
  EXECUTABLES: 'mysh'

jobs:
  # check_coding_style:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/epitech/coding-style-checker:latest
  #   steps:
  #   - name: Checkout GH repository
  #     uses: actions/checkout@v4
  #     with:
  #       repository: ${{ github.repository }}

  #   - name: Run coding-style checker script
  #     run: check.sh $(pwd) $(pwd)

  #   - name: Display coding style errors as annotations if any errors
  #     id: annotations
  #     run: |
  #       if [ ! -f coding-style-reports.log ]; then
  #         echo "No coding style report found."
  #         exit 1
  #       fi

  #       NB_ERRORS=$(cat coding-style-reports.log | wc -l)
  #       if [ $NB_ERRORS -ge 1 ]; then
  #         while IFS= read -r line
  #         do
  #           FILE=$(echo $line | cut -d ':' -f1)
  #           LINE=$(echo $line | cut -d ':' -f2)
  #           ERROR=$(echo $line | cut -d ':' -f3-)
  #           FILE=$(realpath --relative-to=$(pwd) $FILE)
  #           echo "::error file=$FILE,line=$LINE,title=$NB_ERRORS coding style errors found::$ERROR"
  #         done < coding-style-reports.log
  #         exit 1
  #       fi
  #       exit 0

  # check_program_compilation:
  #   runs-on: ubuntu-latest
  #   container: epitechcontent/epitest-docker:latest
  #   # needs: check_coding_style
  #   steps:
  #   - name: Checkout GH repository
  #     uses: actions/checkout@v4
  #     with:
  #       repository: ${{ github.repository }}

  #   - name: Compile the project
  #     run: make
  #     timeout-minutes: 2

  #   - name: Check if the executable exists
  #     run: |
  #       if [ ! -f ${{ env.EXECUTABLES }} ]; then
  #         echo "The executable ${{ env.EXECUTABLES }} does not exist."
  #       exit 1
  #       fi

  #   - name: Clean the project
  #     run: make fclean

  run_tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    # needs: check_program_compilation
    steps:
    - name: Checkout GH repository
      uses: actions/checkout@v4
      with:
        repository: ${{github.repository}}

    - name: Launch unit_tests
      run: make tests_run
      timeout-minutes: 2
