name: Chocolatine Workflow

on:
  push:
    branches:
      - '**'
      - '!ga-ignore-**'
  pull_request:
    branches:
      - '**'
      - '!ga-ignore-**'

env:
  MIRROR_URL: ${{ secrets.MIRROR_URL }}
  EXECUTABLES: "mysh"


jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Coding style checker run
        run: |
          check.sh $(pwd) $(pwd)
          if [ -s coding-style-reports.log ]; then
            cat coding-style-reports.log
            exit 1
          fi
          
  check_program_compilation:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Project compile
        run:  |
              make
              for exe in $(echo $EXECUTABLES); do
              if [ ! -x $exe ]; then
              echo "::error file=$exe,Executable $exe is missing or not executable"
              exit 1
              fi
              done

      - name: do clean
        run: make clean

  run_tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_program_compilation
    timeout-minutes: 2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Tests run
        run: make tests_run

  check_banned_functions:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_program_compilation
    steps:
      - name: Check repository
        uses: actions/checkout@v3

      - name: Check for banned functions
        run: |
          if grep -r "printf\|exit\strtok\|strlen\|strcmp|\snprintf\sprintf" src/; then
            echo "::error::Banned functions found"
            exit 84
          fi