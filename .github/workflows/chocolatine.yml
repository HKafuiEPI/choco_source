name: chocolatine
on:
    push:
      branches-ignore: 
         -  'ga-ignore-*'
    pull_request:
        branches-ignore: 
         -  'ga-ignore-*'

env:
    MIRROR_URL: "B-PSU-100-COT-1-1-myls-meric.gbemetonou" #${{vars.MIRROR_URL}}
    EXECUTABLES: "my_ls" #${{vars.EXECUTABLES}}

jobs:
    check_coding_style:
        runs-on: ubuntu-latest
        container: ghcr.io/epitech/coding-style-checker:latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - run: check.sh $(pwd) $(pwd)
            - run:  ls
            - run: |
                fileName="coding-style-reports.log"
                content=$(cat "$fileName")
                echo "$content"
    check_program_compilation:
      runs-on: ubuntu-latest
      container: epitechcontent/epitest-docker
      needs: check_coding_style
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Compile the project  
          run: make
          timeout-minutes: 2
        - name: Clean the repo  
          run: make clean
        - name: Check executables
          run: |
            for item in ${{vars.EXECUTABLES}}; do
              if [ ! -x "$item" ]; then
                echo "Compilation check failed."
                 exit 1
               fi
            done

    run_tests:
        runs-on: epitechcontent/epitest-docker
        needs: check_program_compilation
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Unit Tests
          run: make tests_run
    
    push_to_mirror:
        runs-on: ubuntu-latest
        needs: run_tests
        steps:
            - uses: actions/checkout@v3
            - uses: pixta-dev/repository-mirroring-action@v1
              with:
                target_repo_url:
                    ${{vars.MIRROR_URL}}
                ssh_private_key:
                    ${{ secrets.GITHUB_SSH_PRIVATE_KEY }}
    
    library_checkor:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - run: |
                ls | grep -q ".a" > f
                if [ -s f ]; then
                    echo "The lib is really there."
                else
                    echo "Lib not found. May be you don't need a library."
                    exit 1
                fi